{"version":3,"sources":["components/MovieCard.js","components/Footer.js","components/Search.js","components/Modal.js","services/ImdbServices.js","App.js","index.js"],"names":["MovieCard","movies","this","props","length","className","map","movie","key","id","style","backgroundImage","poster_path","title","substring","release_date","overview","onClick","showModal","React","Component","Footer","handleGetMovies","loadCount","type","SearchInput","state","param","handleChange","bind","event","setState","target","value","onChange","placeholder","aria-label","handleSearchMovies","Modal","onClose","e","describeMovie","show","children","genres","genre","url","process","REACT_APP_API_URL","axios","get","then","data","results","catch","error","App","handleGetGenres","genre_ids","forEach","a","ImdbServices","getMovies","resultMovies","searchMovies","Array","isArray","genreId","getGenre","result","Search","ReactDOM","render","document","getElementById"],"mappings":"+UA8CeA,G,uLA1CD,IAAD,OACGC,EAAWC,KAAKC,MAAhBF,OAER,OACI,kBAAC,WAAD,KACMA,GAA4B,IAAlBA,EAAOG,OACf,yBAAKC,UAAU,4CACVJ,EAAOK,KAAI,SAACC,GACT,OAAQ,yBAAKC,IAAKD,EAAME,GAAIJ,UAAU,8CAClC,yBAAKA,UAAU,kGAAkGK,MAAO,CAAEC,gBAAiBJ,EAAMK,YAAN,+CAA4DL,EAAMK,aAAgB,yFAE7N,yBAAKP,UAAU,kMACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,qCAAqCE,EAAMM,MAAMT,OAAS,GAAMG,EAAMM,MAAMC,UAAU,EAAGP,EAAMM,MAAMT,OAAS,GAAK,MAASG,EAAMM,OACjJ,yBAAKR,UAAU,4BAAf,iBAAyDE,EAAMQ,cAE/D,uBAAGV,UAAU,qCAAqCE,EAAMS,WAE5D,4BAAQC,QAAS,kBAAM,EAAKd,MAAMe,UAAUX,IAAQF,UAAU,oFAA9D,qBAMhB,yBAAKA,UAAU,2CACX,uE,GA3BAc,IAAMC,YCmBfC,E,iLAjBD,IAAD,OACL,OACI,yBAAKhB,UAAU,2CACVH,KAAKC,MAAMF,OAAOG,OAAS,EACxB,4BAAQa,QAAS,kBAAM,EAAKd,MAAMmB,gBAAgB,EAAKnB,MAAMoB,YAAYlB,UAAU,kIAAkImB,KAAK,UAA1N,aAGE,Q,GARDL,IAAMC,WCkCZK,E,YAjCX,WAAYtB,GAAQ,IAAD,8BACf,4CAAMA,KAEDuB,MAAQ,CACTC,MAAO,IAGX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPL,E,0EAWNC,GACT5B,KAAK6B,SAAS,CAAEJ,MAAOG,EAAME,OAAOC,U,+BAI9B,IAAD,OACL,OACI,yBAAK5B,UAAU,4BACX,yBAAKA,UAAU,8DACX,2BAAO4B,MAAO/B,KAAKwB,MAAMC,MAAOO,SAAUhC,KAAK0B,aAAcvB,UAAU,kHAAkHmB,KAAK,OAAOW,YAAY,gBAAgBC,aAAW,cAC5O,4BAAQnB,QAAS,kBAAM,EAAKd,MAAMkC,mBAAmB,EAAKX,MAAMC,QAAQtB,UAAU,kIAAkImB,KAAK,UAAzN,gB,GAvBML,IAAMC,WCCXkB,G,iNAEjBC,QAAU,SAAAC,GACN,EAAKrC,MAAMoC,SAAW,EAAKpC,MAAMoC,QAAQC,I,wEAEnC,IACEC,EAAkBvC,KAAKC,MAAvBsC,cACR,OAAKvC,KAAKC,MAAMuC,KAIZ,yBAAKrC,UAAU,QAAQI,GAAG,SACtB,yBAAKJ,UAAU,iBAAiBH,KAAKC,MAAMwC,SACvC,4BAAQtC,UAAU,eAAeY,QAASf,KAAKqC,SAA/C,KACA,yBAAKlC,UAAU,yCACX,yBAAKA,UAAU,iHAAiHK,MAAO,CAAEC,gBAAiB8B,EAAc7B,YAAd,+CAAoE6B,EAAc7B,aAAgB,yFAE5P,yBAAKP,UAAU,8LACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,wCAAwCoC,EAAc5B,OACrE,uBAAGR,UAAU,2BAA2BoC,EAAczB,WAE1D,yBAAKX,UAAU,qBACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,8BAAb,gBACA,uBAAGA,UAAU,iBAAiBoC,EAAc1B,gBAGpD,yBAAKV,UAAU,qBACX,yBAAKA,UAAU,WACX,uBAAGA,UAAU,8BAAb,UACA,uBAAGA,UAAU,iBAAiBH,KAAKC,MAAMyC,OAAOtC,KAAI,SAAAuC,GAAK,iBAAQA,EAAR,cAO7E,yBAAKxC,UAAU,WACX,4BAAQA,UAAU,iBAAlB,WA/BD,S,GARgBc,IAAMC,Y,iBCDnC0B,EAAMC,mHAAYC,kBAqCT,M,2IAlCGzB,G,iFACD0B,IACVC,IAAIJ,EAAG,sBAAkBvB,IACzB4B,MAAK,SAAS,GACb,OADuB,EAARC,KACHC,WAEbC,OAAM,SAASC,GACd,OAAOA,K,sNAIM5B,G,iFACJsB,IACVC,IAAIJ,EAAG,uBAAmBnB,IAC1BwB,MAAK,SAAS,GACb,OADuB,EAARC,KACHC,WAEbC,OAAM,SAASC,GACd,OAAOA,K,kNAIE5B,G,iFACAsB,IACVC,IAAIJ,EAAG,gBAAYnB,IACnBwB,MAAK,SAAS,GACb,OADuB,EAARC,KACHP,SAEbS,OAAM,SAASC,GACd,OAAOA,K,kJCqEAC,E,YA3Fb,aAAe,IAAD,8BACZ,+CACK9B,MAAQ,CACXzB,OAAQ,GACRsB,UAAY,EACZmB,MAAM,EACND,cAAgB,GAChBG,OAAQ,IAGZ,EAAKtB,gBAAkB,EAAKA,gBAAgBO,KAArB,gBACvB,EAAKQ,mBAAqB,EAAKA,mBAAmBR,KAAxB,gBAC1B,EAAK4B,gBAAkB,EAAKA,gBAAgB5B,KAArB,gBACvB,EAAKX,UAAY,EAAKA,UAAUW,KAAf,gBAbH,E,2MAiBN3B,KAAKoB,kB,uBACLpB,KAAKoB,kB,sIAGHf,GAAO,IAAD,OACVL,KAAKwB,MAAMgB,OACbxC,KAAK6B,SAAS,CAACa,OAAQ,KACvBrC,EAAMmD,UAAUC,QAAhB,uCAAwB,WAAMd,GAAN,SAAAe,EAAA,sEAAqB,EAAKH,gBAAgBZ,GAA1C,mFAAxB,wDAGF3C,KAAK6B,SAAS,CACZW,MAAOxC,KAAKwB,MAAMgB,KAClBD,cAAelC,M,8KAOXL,KAAK6B,SAAS,CAACR,UAAWrB,KAAKwB,MAAMH,UAAY,I,gBAC3BrB,KAAKwB,MAA1BH,E,EAAAA,UAAWtB,E,EAAAA,O,SACO4D,EAAaC,UAAWvC,GAAwB,G,OAArEwC,E,OACJ7D,KAAK6B,SAAS,CACV9B,OAAO,GAAD,mBAAMA,GAAN,YAAiB8D,M,wLAKJpC,G,uFACEkC,EAAaG,aAAarC,G,OAA/CoC,E,OACDE,MAAMC,QAAQH,IAChB7D,KAAK6B,SAAS,CACb9B,OAAS8D,GAA8B,K,sLAKpBI,G,uFACAN,EAAaO,SAASD,G,OAArCE,E,OAENnE,KAAK6B,SAAS,CAACa,OAAO,CACpByB,GADmB,mBAEhBnE,KAAKwB,MAAMkB,W,sIAOhB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAOL,QAASrC,KAAKgB,UAAWwB,KAAMxC,KAAKwB,MAAMgB,KAC1CD,cAAevC,KAAKwB,MAAMe,cAC1BG,OAAQ1C,KAAKwB,MAAMkB,SAG5B,yBAAKvC,UAAU,wCACb,kBAACiE,EAAD,CAAQjC,mBAAoBnC,KAAKmC,qBACjC,kBAAC,EAAD,CACEf,gBAAiBpB,KAAKoB,gBACtBrB,OAAQC,KAAKwB,MAAMzB,OACnBiB,UAAWhB,KAAKgB,YAElB,kBAAC,EAAD,CACEjB,OAAQC,KAAKwB,MAAMzB,OACnBqB,gBAAiBpB,KAAKoB,gBACtBC,UAAWrB,KAAKwB,MAAMH,kB,GArFdJ,IAAMC,WCLxBmD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fc0180fe.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nclass MovieCard extends React.Component {\r\n\r\n    render() {\r\n        const { movies } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                {(movies && movies.length !== 0) ?\r\n                    <div className=\"flex flex-1 content-start flex-wrap h-64\">\r\n                        {movies.map((movie) => {\r\n                            return (<div key={movie.id} className=\"w-1/4 max-w-md max-h-full lg:flex p-2 h-64\">\r\n                                <div className=\"lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\" style={{ backgroundImage: movie.poster_path ? `url('https://image.tmdb.org/t/p/w200/${movie.poster_path}` : \"url('https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png')\" }}>\r\n                                </div>\r\n                                <div className=\"border-r border-b border-l border-grey-light lg:border-l-0 lg:border-t lg:border-grey-light bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\">\r\n                                    <div className=\"mb-8\">\r\n                                        <div className=\"text-black font-bold text-xl mb-2\">{movie.title.length > 25 ? (movie.title.substring(0, movie.title.length - 5) + \"...\") : movie.title}</div>\r\n                                        <div className=\"text-black  text-xs mb-2\">Release date: {movie.release_date}</div>\r\n\r\n                                        <p className=\"hidden text-grey-darker text-base\">{movie.overview}</p>\r\n                                    </div>\r\n                                    <button onClick={() => this.props.showModal(movie)} className=\"bg-blue-500 content-end hover:bg-blue-700 text-white font-bold py-1 px-1 rounded\" >See Details</button>\r\n                                </div>\r\n                            </div>)\r\n                        })}\r\n                    </div>\r\n                    :\r\n                    <div className=\"flex m-20 justify-center content-center\">\r\n                        <span>Nenhum resultado foi encontrado</span>\r\n\r\n                    </div>\r\n                }\r\n\r\n\r\n            </Fragment>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default MovieCard;\r\n","import React from 'react';\r\n\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"flex m-20 justify-center content-center\">\r\n                {this.props.movies.length > 0 ?\r\n                    <button onClick={() => this.props.handleGetMovies(this.props.loadCount)} className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"button\">\r\n                        Load More\r\n                 </button>\r\n                    : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nclass SearchInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            param: ''\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState({ param: event.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex m-20 justify-center\" >\r\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                    <input value={this.state.param} onChange={this.handleChange} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search movies\" aria-label=\"Full name\" />\r\n                    <button onClick={() => this.props.handleSearchMovies(this.state.param)} className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"button\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport '../modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n\r\n    onClose = e => {\r\n        this.props.onClose && this.props.onClose(e);\r\n    };\r\n    render() {\r\n        const { describeMovie } = this.props\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"modal\" id=\"modal\">\r\n                <div className=\"modal-content\">{this.props.children}\r\n                    <button className=\"modal-button\" onClick={this.onClose}>X</button>\r\n                    <div className=\"max-w-sm w-full lg:max-w-full lg:flex\">\r\n                        <div className=\"h-20 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\" style={{ backgroundImage: describeMovie.poster_path ? `url('https://image.tmdb.org/t/p/w200/${describeMovie.poster_path}` : \"url('https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png')\" }}>\r\n                        </div>\r\n                        <div className=\"border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\">\r\n                            <div className=\"mb-8\">\r\n                                <div className=\"text-gray-900 font-bold text-xl mb-2\">{describeMovie.title}</div>\r\n                                <p className=\"text-gray-700 text-base\">{describeMovie.overview}</p>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <div className=\"text-sm\">\r\n                                    <p className=\"text-gray-900 leading-none\">Release Date</p>\r\n                                    <p className=\"text-gray-600\">{describeMovie.release_date}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                                <div className=\"text-sm\">\r\n                                    <p className=\"text-gray-900 leading-none\">Genres</p>\r\n                                    <p className=\"text-gray-600\">{this.props.genres.map(genre => ` ${genre} `)}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <button className=\"toggle-button\" >\r\n                        close\r\n          </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst url = process.env.REACT_APP_API_URL;\r\n\r\nclass ImdbServices {\r\n  async getMovies(loadCount) {\r\n    return await axios\r\n      .get(url + `movies?page=${loadCount}`)\r\n      .then(function({ data }) {\r\n        return data.results;\r\n      })\r\n      .catch(function(error) {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  async searchMovies(param) {\r\n    return await axios\r\n      .get(url + `search?movie=${param}`)\r\n      .then(function({ data }) {\r\n        return data.results;\r\n      })\r\n      .catch(function(error) {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  async getGenre(param) {\r\n    return await axios\r\n      .get(url + `genre/${param}`)\r\n      .then(function({ data }) {\r\n        return data.genre;\r\n      })\r\n      .catch(function(error) {\r\n        return error;\r\n      });\r\n  }\r\n}\r\n\r\nexport default new ImdbServices();\r\n","import React, { Fragment } from 'react';\r\nimport './App.css';\r\n\r\nimport MovieCard from './components/MovieCard'\r\nimport Footer from './components/Footer'\r\nimport Search from './components/Search'\r\nimport Modal from './components/Modal'\r\n\r\nimport ImdbServices from './services/ImdbServices'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movies: [],\r\n      loadCount : 0,\r\n      show: false,\r\n      describeMovie : '',\r\n      genres: []\r\n  }\r\n\r\n  this.handleGetMovies = this.handleGetMovies.bind(this)\r\n  this.handleSearchMovies = this.handleSearchMovies.bind(this)\r\n  this.handleGetGenres = this.handleGetGenres.bind(this)\r\n  this.showModal = this.showModal.bind(this)\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.handleGetMovies()\r\n    await this.handleGetMovies()\r\n  }\r\n\r\n  showModal(movie){\r\n    if(!this.state.show){\r\n      this.setState({genres: []})\r\n      movie.genre_ids.forEach(async genre => await this.handleGetGenres(genre))\r\n    }\r\n    \r\n    this.setState({\r\n      show: !this.state.show,\r\n      describeMovie: movie\r\n    });\r\n  };\r\n\r\n\r\n\r\n  async handleGetMovies() {\r\n    await this.setState({loadCount: this.state.loadCount + 1})\r\n    const {loadCount, movies} = this.state \r\n    let resultMovies = await ImdbServices.getMovies((loadCount ? loadCount : 1))\r\n    this.setState({\r\n        movies: [...movies, ...resultMovies]\r\n    })\r\n\r\n}\r\n\r\n  async handleSearchMovies(param) {\r\n    let resultMovies = await ImdbServices.searchMovies(param)\r\n    if(Array.isArray(resultMovies))   {\r\n     this.setState({\r\n      movies: (resultMovies ? resultMovies : [])\r\n      })\r\n      }\r\n  }\r\n\r\n  async handleGetGenres (genreId){\r\n    const result = await ImdbServices.getGenre(genreId)\r\n\r\n    this.setState({genres: [\r\n      result,\r\n      ...this.state.genres\r\n    ]})\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal onClose={this.showModal} show={this.state.show}\r\n               describeMovie={this.state.describeMovie}\r\n               genres={this.state.genres}\r\n        >\r\n        </Modal>\r\n      <div className=\"min-h-screen flex flex-col font-sans\">\r\n        <Search handleSearchMovies={this.handleSearchMovies}/>\r\n        <MovieCard \r\n          handleGetMovies={this.handleGetMovies}\r\n          movies={this.state.movies}\r\n          showModal={this.showModal}\r\n          />\r\n        <Footer \r\n          movies={this.state.movies}\r\n          handleGetMovies={this.handleGetMovies}\r\n          loadCount={this.state.loadCount}\r\n        />\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}